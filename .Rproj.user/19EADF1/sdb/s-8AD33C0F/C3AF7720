{
    "collab_server" : "",
    "contents" : "require(dplyr)\nrequire(ggplot2)\n\n# Not including 74 because of trial issues\n# Also not including 19 because I don't have the file\n# So grand average only includes 34 subs instead of 36 like the analyses\n\nsublist = c(5, 13, 14, 21, 23, 24, 27, 32, 55, 60, 61, 68, 71, 72, 84, 91, \n            100, 104, 105, 108, 112, 115, 117, 129, 135, 137)\n\npath = \"./Individual data files/\"\n\nelectrodeList = c(\"F3\", \"FZ\", \"F4\", \"FC3\", \"FCZ\", \"FC4\", \"C3\", \"CZ\", \"C4\") # specify electrodes that you want quantified\n\n\nbeginEpoch = -100 # how many ms before onset does epoch start\nendEpoch = 1200 # how many ms after onset does epoch end\nlengthEpoch = endEpoch - beginEpoch + 1\n\nN2.correct = read.delim(\"./AllSubs_TBTaverages_N2_Correct_withPrevious_EventFixed.txt\")\n\nnumTrialsdat = NULL\n\n\n# Makes file with individual averages for each subject --------------------\n\n# have to do  sub 112 (because of trial 302) individually\nfor (k in sublist) {\n  \n  # read in trial-by-trial point data\n  temp = read.delim(paste(path, k, \"_TBT_2.dat\", sep=\"\"), skip=2, header=FALSE, colClasses = \"numeric\") \n  names(temp) = electrodeList # replace column names\n  temp = temp[,1:length(electrodeList)] # get rid of last NA column\n  \n  numTrials = nrow(temp)/lengthEpoch # figures out how many trials are in data\n  \n  # add identifiers\n  temp$Subject = k\n  temp$Points = rep(1:lengthEpoch, numTrials)\n  temp$Time = rep(beginEpoch:endEpoch, numTrials)\n  temp$Trial = rep(1:numTrials, each = lengthEpoch)\n  \n  # read in event file to add whether response was correct, condition, etc.\n  ev2 = read.delim(paste(\"./Event files/\", k, \"flk_rev.ev2\", sep=\"\"), header=FALSE)\n  \n  numTrialsdat = rbind(numTrialsdat, data.frame(Subject = k, eventfile = nrow(ev2), TBTfile = numTrials)) \n  \n  # figure out which trials to use\n  usetrials = unique(N2.correct$Trial[N2.correct$Subject == k])\n  sub = subset(temp, Trial %in% usetrials)\n  \n  # put in trial condition\n  PC.CC = unique(N2.correct$Trial[N2.correct$TrialCondition == \"Previous compatible - Current compatible\" & N2.correct$Subject == k])\n  PC.CI = unique(N2.correct$Trial[N2.correct$TrialCondition == \"Previous compatible - Current incompatible\" & N2.correct$Subject == k])\n  PI.CC = unique(N2.correct$Trial[N2.correct$TrialCondition == \"Previous incompatible - Current compatible\" & N2.correct$Subject == k])\n  PI.CI = unique(N2.correct$Trial[N2.correct$TrialCondition == \"Previous incompatible - Current incompatible\" & N2.correct$Subject == k])\n  \n  sub$Condition = NA\n  sub$Condition[sub$Trial %in% PC.CC] = \"PC-CC\"\n  sub$Condition[sub$Trial %in% PC.CI] = \"PC-CI\"\n  sub$Condition[sub$Trial %in% PI.CC] = \"PI-CC\"\n  sub$Condition[sub$Trial %in% PI.CI] = \"PI-CI\"\n  \n  #sub = filter(sub, Trial != 302)\n  \n  indivavg = select(sub, -Points, -Subject, -Trial) %>% \n    group_by(Condition, Time) %>% \n    summarise_each(funs(mean)) %>% \n    as.data.frame()\n  \n  indivavg$Subject = k\n\n  write.table(indivavg, paste(\"./Individual data files/IndivAvg_\", k, \".txt\", sep=\"\"), row.names=F, sep=\"\\t\")\n}  \n\n# have to separately for subjects with weird event files\n\nprobsub = c(2, 4, 8, 16, 17, 30, 59, 70)\n\nnumTrialsdat = NULL\nfor (k in probsub) {\n  \n  # read in trial-by-trial point data\n  temp = read.delim(paste(path, k, \"_TBT_2.dat\", sep=\"\"), skip=2, header=FALSE, colClasses = \"numeric\") \n  names(temp) = electrodeList # replace column names\n  temp = temp[,1:length(electrodeList)] # get rid of last NA column\n  \n  numTrials = nrow(temp)/lengthEpoch # figures out how many trials are in data\n  \n  # add identifiers\n  temp$Subject = k\n  temp$Points = rep(1:lengthEpoch, numTrials)\n  temp$Time = rep(beginEpoch:endEpoch, numTrials)\n  temp$Trial = rep(1:numTrials, each = lengthEpoch)\n  \n  # read in event file to add whether response was correct, condition, etc.\n  ev2 = read.delim(paste(\"./Fixing trial mismatch/\", k, \"flk_rev_manuallymodifiedHVE.ev2\", sep=\"\"), header=FALSE)\n  \n  numTrialsdat = rbind(numTrialsdat, data.frame(Subject = k, eventfile = nrow(ev2), TBTfile = numTrials)) \n  \n  # figure out which trials to use\n  usetrials = unique(N2.correct$Trial[N2.correct$Subject == k])\n  sub = subset(temp, Trial %in% usetrials)\n  \n  # put in trial condition\n  PC.CC = unique(N2.correct$Trial[N2.correct$TrialCondition == \"Previous compatible - Current compatible\" & N2.correct$Subject == k])\n  PC.CI = unique(N2.correct$Trial[N2.correct$TrialCondition == \"Previous compatible - Current incompatible\" & N2.correct$Subject == k])\n  PI.CC = unique(N2.correct$Trial[N2.correct$TrialCondition == \"Previous incompatible - Current compatible\" & N2.correct$Subject == k])\n  PI.CI = unique(N2.correct$Trial[N2.correct$TrialCondition == \"Previous incompatible - Current incompatible\" & N2.correct$Subject == k])\n  \n  sub$Condition = NA\n  sub$Condition[sub$Trial %in% PC.CC] = \"PC-CC\"\n  sub$Condition[sub$Trial %in% PC.CI] = \"PC-CI\"\n  sub$Condition[sub$Trial %in% PI.CC] = \"PI-CC\"\n  sub$Condition[sub$Trial %in% PI.CI] = \"PI-CI\"\n  \n  indivavg = select(sub, -Points, -Subject, -Trial) %>% \n    group_by(Condition, Time) %>% \n    summarise_each(funs(mean)) %>% \n    as.data.frame()\n  \n  indivavg$Subject = k\n  \n  write.table(indivavg, paste(\"./Individual data files/IndivAvg_\", k, \".txt\", sep=\"\"), row.names=F, sep=\"\\t\")\n}  \n\n\n# Reads in individual averages and makes grand averages -------------------\n\ngroup = NULL\nfor (k in c(sublist, probsub)) {\n  indiv = read.delim(paste(\"./Individual data files/IndivAvg_\", k, \".txt\", sep=\"\"))\n  group = rbind(group, indiv)\n}\n\ngrandavg = select(group, -Subject) %>% \n  group_by(Condition, Time) %>% \n  summarise_each(funs(mean(., na.rm = TRUE)))\n\ngrandavg = as.data.frame(grandavg)\n\ngrandavg$Cond = NA\ngrandavg$Cond[grandavg$Condition == \"PC-CC\"] = \"Previous compatible - Current compatible\"\ngrandavg$Cond[grandavg$Condition == \"PC-CI\"] = \"Previous compatible - Current incompatible\"\ngrandavg$Cond[grandavg$Condition == \"PI-CC\"] = \"Previous incompatible - Current compatible\"\ngrandavg$Cond[grandavg$Condition == \"PI-CI\"] = \"Previous incompatible - Current incompatible\"\n\ngrandavg = mutate(grandavg, avgElec9 = (F3 + FZ + F4 + FC3 + FCZ + FC4 + C3 + CZ + C4)/9)\ngrandavg = mutate(grandavg, avgElec6 = (F3 + FZ + F4 + FC3 + FCZ + FC4)/6)\n\n\nwrite.table(grandavg, \"./GrandAvg_forPlotting.txt\", row.names=F, sep=\"\\t\")\n\n\n\n\n\n\n\n\n\n\n# START HERE FOR PLOTTING -------------------------------------------------\n\ngrandavg = read.delim(\"./GrandAvg_forPlotting.txt\")\n\n\n### make plots\n\ntop = 7.5\nbottom = -6\n  \nN2box = annotate(\"rect\",  \n                 xmin=220, xmax=320, ymin=bottom+.05, ymax=top-.05, alpha=.04,\n                 color=\"black\") \n\nFSWbox =  annotate(\"rect\",\n                    xmin=600, xmax=1150, ymin=bottom+.05, ymax=top-.05,\n                    alpha=.04,\n                    color=\"black\")\n\nERPline = geom_line(lwd=1.1,\n                    aes(color = Cond, linetype = Cond))\n\ncondLinetype = c(\"solid\", \"longdash\", \"solid\", \"longdash\")\n\ncondColors = c(\"blue\", \"blue\", \"red\", \"red\")\n\nnone = element_blank() \n\n\n\n# Individual electrodes ----------------------------------------------------------------\n\nggplot(data=grandavg, aes(Time, FZ, group = Cond)) + \n  ERPline + \n  N2box +\n  FSWbox +\n  # add label for electrode\n  annotate(\"text\", label = \"FZ\", x = -50, y = 6.5, size = 8, colour = \"black\") +\n  theme_bw() + \n  theme(panel.grid.major.x = none, panel.grid.minor.x = none) +\n  scale_x_continuous(\"Time (ms)\", \n                     limits=c(-100, 1200), \n                     expand=c(0,0),   # expand=c(0,0) removes extra space before & after data\n                     breaks=c(-100, 0, 100, 200, 300, 400, 500, 600, 700, 800, 900, 1000, 1100, 1200)) +\n  geom_hline(yintercept=0) + # adds x axis\n  scale_y_continuous(limits =c(-7.5, 7.5)) +  # scale_y_reverse flips y axis\n  ylab(\"Amplitude (uV)\") +\n  scale_color_manual(values=condColors) +\n  scale_linetype_manual(values=condLinetype) +\n  guides(color=FALSE) # Remove legend \n\n\n\n\n# Average electrode -------------------------------------------------------\n\nggplot(data=grandavg, aes(Time, avgElec9, group = Cond)) + \n  ERPline + \n  N2box +\n  FSWbox +\n  # add label for electrode\n  #annotate(\"text\", label = \"All electrodes\", x = 150, y = 6.5, size = 8, colour = \"black\") +\n  theme_bw() + \n  theme(panel.grid.major.x = none, panel.grid.minor.x = none) +\n  scale_x_continuous(\"Time (ms)\", \n                     limits=c(-100, 1200), \n                     expand=c(0,0),   # expand=c(0,0) removes extra space before & after data\n                     breaks=c(-100, 0, 100, 200, 300, 400, 500, 600, 700, 800, 900, 1000, 1100, 1200)) +\n  geom_hline(yintercept=0) + # adds x axis\n  geom_vline(xintercept=0, linetype=\"dashed\") +\n  scale_y_continuous(limits =c(bottom, top), expand=c(0,0)) +  # scale_y_reverse flips y axis\n  ylab(\"Amplitude (uV)\") +\n  scale_color_manual(values=condColors) +\n  #ggtitle(\"All subjects\") +\n  scale_linetype_manual(values=condLinetype) +\n  theme(plot.title = element_text(hjust = 0.5),\n        axis.title = element_text(size=18),\n        axis.text.x = element_text(size=14),\n        axis.text.y = element_text(size=14))\n#  guides(color=FALSE) # Remove legend \n\nggsave(\"./Figures/GrandAverage_allElec_allSubjects.tiff\", width = 14, height = 8)\n\n\n\n",
    "created" : 1490989344356.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2649587249",
    "id" : "C3AF7720",
    "lastKnownWriteTime" : 1490994237,
    "last_content_update" : 1490994237349,
    "path" : "~/Documents/Projects/8 Conflict adaptation- AlcCaf/Analyses/8 Plot grand averages.R",
    "project_path" : "8 Plot grand averages.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "relative_order" : 2,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}