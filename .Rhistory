sub = subset(temp, Trial %in% usetrials)
PC.CC = unique(N2.correct$Trial[N2.correct$TrialCondition == "Previous compatible - Current compatible" & N2.correct$Subject == k])
PC.CI = unique(N2.correct$Trial[N2.correct$TrialCondition == "Previous compatible - Current incompatible" & N2.correct$Subject == k])
PI.CC = unique(N2.correct$Trial[N2.correct$TrialCondition == "Previous incompatible - Current compatible" & N2.correct$Subject == k])
PI.CI = unique(N2.correct$Trial[N2.correct$TrialCondition == "Previous incompatible - Current incompatible" & N2.correct$Subject == k])
sub$Condition = NA
sub$Condition[sub$Trial %in% PC.CC] = "PC-CC"
sub$Condition[sub$Trial %in% PC.CI] = "PC-CI"
sub$Condition[sub$Trial %in% PI.CC] = "PI-CC"
sub$Condition[sub$Trial %in% PI.CI] = "PI-CI"
sub[is.na(sub$Condition)]
sub[is.na(sub$Condition),]
sub = filter(sub, Trial != 302)
sum(is.na(sub))
indivavg = select(sub, -Points, -Subject, -Trial) %>%
group_by(Condition, Time) %>%
summarise_each(funs(mean)) %>%
as.data.frame()
indivavg$Subject = k
write.table(indivavg, paste("./Individual data files/IndivAvg_", k, ".txt", sep=""), row.names=F, sep="\t")
probsub = c(2, 4, 8, 16, 17, 19, 30, 59, 70)
numTrialsdat = NULL
for (k in probsub) {
# read in trial-by-trial point data
temp = read.delim(paste(path, k, "_TBT_2.dat", sep=""), skip=2, header=FALSE, colClasses = "numeric")
names(temp) = electrodeList # replace column names
temp = temp[,1:length(electrodeList)] # get rid of last NA column
numTrials = nrow(temp)/lengthEpoch # figures out how many trials are in data
# add identifiers
temp$Subject = k
temp$Points = rep(1:lengthEpoch, numTrials)
temp$Time = rep(beginEpoch:endEpoch, numTrials)
temp$Trial = rep(1:numTrials, each = lengthEpoch)
# read in event file to add whether response was correct, condition, etc.
ev2 = read.delim(paste("./Fixing trial mismatch/", k, "flk_rev_manuallymodifiedHVE.ev2", sep=""), header=FALSE)
numTrialsdat = rbind(numTrialsdat, data.frame(Subject = k, eventfile = nrow(ev2), TBTfile = numTrials))
# figure out which trials to use
usetrials = unique(N2.correct$Trial[N2.correct$Subject == k])
sub = subset(temp, Trial %in% usetrials)
# put in trial condition
PC.CC = unique(N2.correct$Trial[N2.correct$TrialCondition == "Previous compatible - Current compatible" & N2.correct$Subject == k])
PC.CI = unique(N2.correct$Trial[N2.correct$TrialCondition == "Previous compatible - Current incompatible" & N2.correct$Subject == k])
PI.CC = unique(N2.correct$Trial[N2.correct$TrialCondition == "Previous incompatible - Current compatible" & N2.correct$Subject == k])
PI.CI = unique(N2.correct$Trial[N2.correct$TrialCondition == "Previous incompatible - Current incompatible" & N2.correct$Subject == k])
sub$Condition = NA
sub$Condition[sub$Trial %in% PC.CC] = "PC-CC"
sub$Condition[sub$Trial %in% PC.CI] = "PC-CI"
sub$Condition[sub$Trial %in% PI.CC] = "PI-CC"
sub$Condition[sub$Trial %in% PI.CI] = "PI-CI"
indivavg = select(sub, -Points, -Subject, -Trial) %>%
group_by(Condition, Time) %>%
summarise_each(funs(mean)) %>%
as.data.frame()
indivavg$Subject = k
write.table(indivavg, paste("./Individual data files/IndivAvg_", k, ".txt", sep=""), row.names=F, sep="\t")
}
probsub = c(2, 4, 8, 16, 17, 30, 59, 70)
numTrialsdat = NULL
for (k in probsub) {
# read in trial-by-trial point data
temp = read.delim(paste(path, k, "_TBT_2.dat", sep=""), skip=2, header=FALSE, colClasses = "numeric")
names(temp) = electrodeList # replace column names
temp = temp[,1:length(electrodeList)] # get rid of last NA column
numTrials = nrow(temp)/lengthEpoch # figures out how many trials are in data
# add identifiers
temp$Subject = k
temp$Points = rep(1:lengthEpoch, numTrials)
temp$Time = rep(beginEpoch:endEpoch, numTrials)
temp$Trial = rep(1:numTrials, each = lengthEpoch)
# read in event file to add whether response was correct, condition, etc.
ev2 = read.delim(paste("./Fixing trial mismatch/", k, "flk_rev_manuallymodifiedHVE.ev2", sep=""), header=FALSE)
numTrialsdat = rbind(numTrialsdat, data.frame(Subject = k, eventfile = nrow(ev2), TBTfile = numTrials))
# figure out which trials to use
usetrials = unique(N2.correct$Trial[N2.correct$Subject == k])
sub = subset(temp, Trial %in% usetrials)
# put in trial condition
PC.CC = unique(N2.correct$Trial[N2.correct$TrialCondition == "Previous compatible - Current compatible" & N2.correct$Subject == k])
PC.CI = unique(N2.correct$Trial[N2.correct$TrialCondition == "Previous compatible - Current incompatible" & N2.correct$Subject == k])
PI.CC = unique(N2.correct$Trial[N2.correct$TrialCondition == "Previous incompatible - Current compatible" & N2.correct$Subject == k])
PI.CI = unique(N2.correct$Trial[N2.correct$TrialCondition == "Previous incompatible - Current incompatible" & N2.correct$Subject == k])
sub$Condition = NA
sub$Condition[sub$Trial %in% PC.CC] = "PC-CC"
sub$Condition[sub$Trial %in% PC.CI] = "PC-CI"
sub$Condition[sub$Trial %in% PI.CC] = "PI-CC"
sub$Condition[sub$Trial %in% PI.CI] = "PI-CI"
indivavg = select(sub, -Points, -Subject, -Trial) %>%
group_by(Condition, Time) %>%
summarise_each(funs(mean)) %>%
as.data.frame()
indivavg$Subject = k
write.table(indivavg, paste("./Individual data files/IndivAvg_", k, ".txt", sep=""), row.names=F, sep="\t")
}
c(sublist, probsubs)
c(sublist, probsub)
group = NULL
for (k in c(sublist, probsub)) {
indiv = read.delim(paste("./Individual data files/IndivAvg_", k, ".txt", sep=""))
group = rbind(group, indiv)
}
grandavg = select(group, -Subject) %>%
group_by(Condition, Time) %>%
summarise_each(funs(mean(., na.rm = TRUE)))
grandavg = as.data.frame(grandavg)
grandavg$Cond = NA
grandavg$Cond[grandavg$Condition == "PC-CC"] = "Previous compatible - Current compatible"
grandavg$Cond[grandavg$Condition == "PC-CI"] = "Previous compatible - Current incompatible"
grandavg$Cond[grandavg$Condition == "PI-CC"] = "Previous incompatible - Current compatible"
grandavg$Cond[grandavg$Condition == "PI-CI"] = "Previous incompatible - Current incompatible"
unique(grandavg$Cond)
grandavg = mutate(grandavg, avgElec9 = (F3 + FZ + F4 + FC3 + FCZ + FC4 + C3 + CZ + C4)/9)
grandavg = mutate(grandavg, avgElec6 = (F3 + FZ + F4 + FC3 + FCZ + FC4)/6)
write.table(grandavg, "./GrandAvg_forPlotting.txt", row.names=F, sep="\t")
grandavg = read.delim("./GrandAvg_forPlotting.txt")
N2box = annotate("rect",
xmin=220, xmax=320, ymin=-Inf, ymax=Inf, alpha=0,
color="red")
FSWbox =  annotate("rect",
xmin=600, xmax=1000, ymin=-Inf, ymax=Inf,
alpha=0,
color="green")
ERPline = geom_line(lwd=1.1,
aes(color = Cond, linetype = Cond))
condLinetype = c("solid", "longdash", "solid", "longdash")
condColors = c("blue", "blue", "red", "red")
none = element_blank()
ggplot(data=grandavg, aes(Time, FZ, group = Cond)) +
ERPline +
N2box +
FSWbox +
# add label for electrode
annotate("text", label = "FZ", x = -50, y = 6.5, size = 8, colour = "black") +
theme_bw() +
theme(panel.grid.major.x = none, panel.grid.minor.x = none) +
scale_x_continuous("Time (ms)",
limits=c(-100, 1200),
expand=c(0,0),   # expand=c(0,0) removes extra space before & after data
breaks=c(-100, 0, 100, 200, 300, 400, 500, 600, 700, 800, 900, 1000, 1100, 1200)) +
geom_hline(yintercept=0) + # adds x axis
scale_y_continuous(limits =c(-7.5, 7.5)) +  # scale_y_reverse flips y axis
ylab("Amplitude (uV)") +
scale_color_manual(values=condColors) +
scale_linetype_manual(values=condLinetype) +
guides(color=FALSE) # Remove legend
ggplot(data=grandavg, aes(Time, avgElec9, group = Cond)) +
ERPline +
N2box +
FSWbox +
# add label for electrode
annotate("text", label = "All electrodes", x = 150, y = 6.5, size = 8, colour = "black") +
theme_bw() +
theme(panel.grid.major.x = none, panel.grid.minor.x = none) +
scale_x_continuous("Time (ms)",
limits=c(-100, 1200),
expand=c(0,0),   # expand=c(0,0) removes extra space before & after data
breaks=c(-100, 0, 100, 200, 300, 400, 500, 600, 700, 800, 900, 1000, 1100, 1200)) +
geom_hline(yintercept=0) + # adds x axis
scale_y_continuous(limits =c(-6, 7.5)) +  # scale_y_reverse flips y axis
ylab("Amplitude (uV)") +
scale_color_manual(values=condColors) +
ggtitle("All subjects") +
scale_linetype_manual(values=condLinetype)
ggplot(data=grandavg, aes(Time, avgElec9, group = Cond)) +
ERPline +
N2box +
FSWbox +
# add label for electrode
#annotate("text", label = "All electrodes", x = 150, y = 6.5, size = 8, colour = "black") +
theme_bw() +
theme(panel.grid.major.x = none, panel.grid.minor.x = none) +
scale_x_continuous("Time (ms)",
limits=c(-100, 1200),
expand=c(0,0),   # expand=c(0,0) removes extra space before & after data
breaks=c(-100, 0, 100, 200, 300, 400, 500, 600, 700, 800, 900, 1000, 1100, 1200)) +
geom_hline(yintercept=0) + # adds x axis
scale_y_continuous(limits =c(-6, 7.5)) +  # scale_y_reverse flips y axis
ylab("Amplitude (uV)") +
scale_color_manual(values=condColors) +
#ggtitle("All subjects") +
scale_linetype_manual(values=condLinetype) +
theme(plot.title = element_text(hjust = 0.5),
axis.title = element_text(size=18),
axis.text.x = element_text(size=14),
axis.text.y = element_text(size=14))
ggsave("./Figures/GrandAverage_allElec_allSubjects.tiff", width = 12, height = 8)
FSWbox =  annotate("rect",
xmin=600, xmax=1150, ymin=-Inf, ymax=Inf,
alpha=0,
color="green")
ggplot(data=grandavg, aes(Time, avgElec9, group = Cond)) +
ERPline +
N2box +
FSWbox +
# add label for electrode
#annotate("text", label = "All electrodes", x = 150, y = 6.5, size = 8, colour = "black") +
theme_bw() +
theme(panel.grid.major.x = none, panel.grid.minor.x = none) +
scale_x_continuous("Time (ms)",
limits=c(-100, 1200),
expand=c(0,0),   # expand=c(0,0) removes extra space before & after data
breaks=c(-100, 0, 100, 200, 300, 400, 500, 600, 700, 800, 900, 1000, 1100, 1200)) +
geom_hline(yintercept=0) + # adds x axis
scale_y_continuous(limits =c(-6, 7.5)) +  # scale_y_reverse flips y axis
ylab("Amplitude (uV)") +
scale_color_manual(values=condColors) +
#ggtitle("All subjects") +
scale_linetype_manual(values=condLinetype) +
theme(plot.title = element_text(hjust = 0.5),
axis.title = element_text(size=18),
axis.text.x = element_text(size=14),
axis.text.y = element_text(size=14))
ggsave("./Figures/GrandAverage_allElec_allSubjects.tiff", width = 12, height = 8)
N2box = annotate("rect",
xmin=220, xmax=320, ymin=-Inf, ymax=Inf, alpha=.02,
color="red")
FSWbox =  annotate("rect",
xmin=600, xmax=1150, ymin=-Inf, ymax=Inf,
alpha=.02,
color="green")
ggplot(data=grandavg, aes(Time, avgElec9, group = Cond)) +
ERPline +
N2box +
FSWbox +
# add label for electrode
#annotate("text", label = "All electrodes", x = 150, y = 6.5, size = 8, colour = "black") +
theme_bw() +
theme(panel.grid.major.x = none, panel.grid.minor.x = none) +
scale_x_continuous("Time (ms)",
limits=c(-100, 1200),
expand=c(0,0),   # expand=c(0,0) removes extra space before & after data
breaks=c(-100, 0, 100, 200, 300, 400, 500, 600, 700, 800, 900, 1000, 1100, 1200)) +
geom_hline(yintercept=0) + # adds x axis
scale_y_continuous(limits =c(-6, 7.5)) +  # scale_y_reverse flips y axis
ylab("Amplitude (uV)") +
scale_color_manual(values=condColors) +
#ggtitle("All subjects") +
scale_linetype_manual(values=condLinetype) +
theme(plot.title = element_text(hjust = 0.5),
axis.title = element_text(size=18),
axis.text.x = element_text(size=14),
axis.text.y = element_text(size=14))
N2box = annotate("rect",
xmin=220, xmax=320, ymin=-Inf, ymax=Inf, alpha=.04,
color="red")
FSWbox =  annotate("rect",
xmin=600, xmax=1150, ymin=-Inf, ymax=Inf,
alpha=.04,
color="green")
ggplot(data=grandavg, aes(Time, avgElec9, group = Cond)) +
ERPline +
N2box +
FSWbox +
# add label for electrode
#annotate("text", label = "All electrodes", x = 150, y = 6.5, size = 8, colour = "black") +
theme_bw() +
theme(panel.grid.major.x = none, panel.grid.minor.x = none) +
scale_x_continuous("Time (ms)",
limits=c(-100, 1200),
expand=c(0,0),   # expand=c(0,0) removes extra space before & after data
breaks=c(-100, 0, 100, 200, 300, 400, 500, 600, 700, 800, 900, 1000, 1100, 1200)) +
geom_hline(yintercept=0) + # adds x axis
scale_y_continuous(limits =c(-6, 7.5)) +  # scale_y_reverse flips y axis
ylab("Amplitude (uV)") +
scale_color_manual(values=condColors) +
#ggtitle("All subjects") +
scale_linetype_manual(values=condLinetype) +
theme(plot.title = element_text(hjust = 0.5),
axis.title = element_text(size=18),
axis.text.x = element_text(size=14),
axis.text.y = element_text(size=14))
top = 7.5
bottom = -6
N2box = annotate("rect",
xmin=220, xmax=320, ymin=bottom, ymax=top, alpha=.04,
color="red")
FSWbox =  annotate("rect",
xmin=600, xmax=1150, ymin=bottom, ymax=top,
alpha=.04,
color="green")
ggplot(data=grandavg, aes(Time, avgElec9, group = Cond)) +
ERPline +
N2box +
FSWbox +
# add label for electrode
#annotate("text", label = "All electrodes", x = 150, y = 6.5, size = 8, colour = "black") +
theme_bw() +
theme(panel.grid.major.x = none, panel.grid.minor.x = none) +
scale_x_continuous("Time (ms)",
limits=c(-100, 1200),
expand=c(0,0),   # expand=c(0,0) removes extra space before & after data
breaks=c(-100, 0, 100, 200, 300, 400, 500, 600, 700, 800, 900, 1000, 1100, 1200)) +
geom_hline(yintercept=0) + # adds x axis
scale_y_continuous(limits =c(bottom, top)) +  # scale_y_reverse flips y axis
ylab("Amplitude (uV)") +
scale_color_manual(values=condColors) +
#ggtitle("All subjects") +
scale_linetype_manual(values=condLinetype) +
theme(plot.title = element_text(hjust = 0.5),
axis.title = element_text(size=18),
axis.text.x = element_text(size=14),
axis.text.y = element_text(size=14))
top = 7.5
bottom = -6
N2box = annotate("rect",
xmin=220, xmax=320, ymin=bottom+.001, ymax=top-.001, alpha=.04,
color="red")
FSWbox =  annotate("rect",
xmin=600, xmax=1150, ymin=bottom+.001, ymax=top-.001,
alpha=.04,
color="green")
ggplot(data=grandavg, aes(Time, avgElec9, group = Cond)) +
ERPline +
N2box +
FSWbox +
# add label for electrode
#annotate("text", label = "All electrodes", x = 150, y = 6.5, size = 8, colour = "black") +
theme_bw() +
theme(panel.grid.major.x = none, panel.grid.minor.x = none) +
scale_x_continuous("Time (ms)",
limits=c(-100, 1200),
expand=c(0,0),   # expand=c(0,0) removes extra space before & after data
breaks=c(-100, 0, 100, 200, 300, 400, 500, 600, 700, 800, 900, 1000, 1100, 1200)) +
geom_hline(yintercept=0) + # adds x axis
scale_y_continuous(limits =c(bottom, top)) +  # scale_y_reverse flips y axis
ylab("Amplitude (uV)") +
scale_color_manual(values=condColors) +
#ggtitle("All subjects") +
scale_linetype_manual(values=condLinetype) +
theme(plot.title = element_text(hjust = 0.5),
axis.title = element_text(size=18),
axis.text.x = element_text(size=14),
axis.text.y = element_text(size=14))
ggplot(data=grandavg, aes(Time, avgElec9, group = Cond)) +
ERPline +
N2box +
FSWbox +
# add label for electrode
#annotate("text", label = "All electrodes", x = 150, y = 6.5, size = 8, colour = "black") +
theme_bw() +
theme(panel.grid.major.x = none, panel.grid.minor.x = none) +
scale_x_continuous("Time (ms)",
limits=c(-100, 1200),
expand=c(0,0),   # expand=c(0,0) removes extra space before & after data
breaks=c(-100, 0, 100, 200, 300, 400, 500, 600, 700, 800, 900, 1000, 1100, 1200)) +
geom_hline(yintercept=0) + # adds x axis
scale_y_continuous(limits =c(bottom, top), expand=c(0,0)) +  # scale_y_reverse flips y axis
ylab("Amplitude (uV)") +
scale_color_manual(values=condColors) +
#ggtitle("All subjects") +
scale_linetype_manual(values=condLinetype) +
theme(plot.title = element_text(hjust = 0.5),
axis.title = element_text(size=18),
axis.text.x = element_text(size=14),
axis.text.y = element_text(size=14))
N2box = annotate("rect",
xmin=220, xmax=320, ymin=bottom+.01, ymax=top-.01, alpha=.04,
color="red")
FSWbox =  annotate("rect",
xmin=600, xmax=1150, ymin=bottom+.01, ymax=top-.01,
alpha=.04,
color="green")
ggplot(data=grandavg, aes(Time, avgElec9, group = Cond)) +
ERPline +
N2box +
FSWbox +
# add label for electrode
#annotate("text", label = "All electrodes", x = 150, y = 6.5, size = 8, colour = "black") +
theme_bw() +
theme(panel.grid.major.x = none, panel.grid.minor.x = none) +
scale_x_continuous("Time (ms)",
limits=c(-100, 1200),
expand=c(0,0),   # expand=c(0,0) removes extra space before & after data
breaks=c(-100, 0, 100, 200, 300, 400, 500, 600, 700, 800, 900, 1000, 1100, 1200)) +
geom_hline(yintercept=0) + # adds x axis
scale_y_continuous(limits =c(bottom, top), expand=c(0,0)) +  # scale_y_reverse flips y axis
ylab("Amplitude (uV)") +
scale_color_manual(values=condColors) +
#ggtitle("All subjects") +
scale_linetype_manual(values=condLinetype) +
theme(plot.title = element_text(hjust = 0.5),
axis.title = element_text(size=18),
axis.text.x = element_text(size=14),
axis.text.y = element_text(size=14))
N2box = annotate("rect",
xmin=220, xmax=320, ymin=bottom+.05, ymax=top-.05, alpha=.04,
color="red")
FSWbox =  annotate("rect",
xmin=600, xmax=1150, ymin=bottom+.05, ymax=top-.05,
alpha=.04,
color="green")
ggplot(data=grandavg, aes(Time, avgElec9, group = Cond)) +
ERPline +
N2box +
FSWbox +
# add label for electrode
#annotate("text", label = "All electrodes", x = 150, y = 6.5, size = 8, colour = "black") +
theme_bw() +
theme(panel.grid.major.x = none, panel.grid.minor.x = none) +
scale_x_continuous("Time (ms)",
limits=c(-100, 1200),
expand=c(0,0),   # expand=c(0,0) removes extra space before & after data
breaks=c(-100, 0, 100, 200, 300, 400, 500, 600, 700, 800, 900, 1000, 1100, 1200)) +
geom_hline(yintercept=0) + # adds x axis
scale_y_continuous(limits =c(bottom, top), expand=c(0,0)) +  # scale_y_reverse flips y axis
ylab("Amplitude (uV)") +
scale_color_manual(values=condColors) +
#ggtitle("All subjects") +
scale_linetype_manual(values=condLinetype) +
theme(plot.title = element_text(hjust = 0.5),
axis.title = element_text(size=18),
axis.text.x = element_text(size=14),
axis.text.y = element_text(size=14))
N2box = annotate("rect",
xmin=220, xmax=320, ymin=bottom+.05, ymax=top-.05, alpha=.04,
color="darkblue")
FSWbox =  annotate("rect",
xmin=600, xmax=1150, ymin=bottom+.05, ymax=top-.05,
alpha=.04,
color="black")
ggplot(data=grandavg, aes(Time, avgElec9, group = Cond)) +
ERPline +
N2box +
FSWbox +
# add label for electrode
#annotate("text", label = "All electrodes", x = 150, y = 6.5, size = 8, colour = "black") +
theme_bw() +
theme(panel.grid.major.x = none, panel.grid.minor.x = none) +
scale_x_continuous("Time (ms)",
limits=c(-100, 1200),
expand=c(0,0),   # expand=c(0,0) removes extra space before & after data
breaks=c(-100, 0, 100, 200, 300, 400, 500, 600, 700, 800, 900, 1000, 1100, 1200)) +
geom_hline(yintercept=0) + # adds x axis
scale_y_continuous(limits =c(bottom, top), expand=c(0,0)) +  # scale_y_reverse flips y axis
ylab("Amplitude (uV)") +
scale_color_manual(values=condColors) +
#ggtitle("All subjects") +
scale_linetype_manual(values=condLinetype) +
theme(plot.title = element_text(hjust = 0.5),
axis.title = element_text(size=18),
axis.text.x = element_text(size=14),
axis.text.y = element_text(size=14))
ggplot(data=grandavg, aes(Time, avgElec9, group = Cond)) +
ERPline +
N2box +
FSWbox +
# add label for electrode
#annotate("text", label = "All electrodes", x = 150, y = 6.5, size = 8, colour = "black") +
theme_bw() +
theme(panel.grid.major.x = none, panel.grid.minor.x = none) +
scale_x_continuous("Time (ms)",
limits=c(-100, 1200),
expand=c(0,0),   # expand=c(0,0) removes extra space before & after data
breaks=c(-100, 0, 100, 200, 300, 400, 500, 600, 700, 800, 900, 1000, 1100, 1200)) +
geom_hline(yintercept=0) + # adds x axis
geom_vline(xintercept=0, linetype="dashed")
ggplot(data=grandavg, aes(Time, avgElec9, group = Cond)) +
ERPline +
N2box +
FSWbox +
# add label for electrode
#annotate("text", label = "All electrodes", x = 150, y = 6.5, size = 8, colour = "black") +
theme_bw() +
theme(panel.grid.major.x = none, panel.grid.minor.x = none) +
scale_x_continuous("Time (ms)",
limits=c(-100, 1200),
expand=c(0,0),   # expand=c(0,0) removes extra space before & after data
breaks=c(-100, 0, 100, 200, 300, 400, 500, 600, 700, 800, 900, 1000, 1100, 1200)) +
geom_hline(yintercept=0) + # adds x axis
geom_vline(xintercept=0, linetype="dashed") +
scale_y_continuous(limits =c(bottom, top), expand=c(0,0)) +  # scale_y_reverse flips y axis
ylab("Amplitude (uV)") +
scale_color_manual(values=condColors) +
#ggtitle("All subjects") +
scale_linetype_manual(values=condLinetype) +
theme(plot.title = element_text(hjust = 0.5),
axis.title = element_text(size=18),
axis.text.x = element_text(size=14),
axis.text.y = element_text(size=14))
ggsave("./Figures/GrandAverage_allElec_allSubjects.tiff", width = 12, height = 8)
N2box = annotate("rect",
xmin=220, xmax=320, ymin=bottom+.05, ymax=top-.05, alpha=.04,
color="black")
ggplot(data=grandavg, aes(Time, avgElec9, group = Cond)) +
ERPline +
N2box +
FSWbox +
# add label for electrode
#annotate("text", label = "All electrodes", x = 150, y = 6.5, size = 8, colour = "black") +
theme_bw() +
theme(panel.grid.major.x = none, panel.grid.minor.x = none) +
scale_x_continuous("Time (ms)",
limits=c(-100, 1200),
expand=c(0,0),   # expand=c(0,0) removes extra space before & after data
breaks=c(-100, 0, 100, 200, 300, 400, 500, 600, 700, 800, 900, 1000, 1100, 1200)) +
geom_hline(yintercept=0) + # adds x axis
geom_vline(xintercept=0, linetype="dashed") +
scale_y_continuous(limits =c(bottom, top), expand=c(0,0)) +  # scale_y_reverse flips y axis
ylab("Amplitude (uV)") +
scale_color_manual(values=condColors) +
#ggtitle("All subjects") +
scale_linetype_manual(values=condLinetype) +
theme(plot.title = element_text(hjust = 0.5),
axis.title = element_text(size=18),
axis.text.x = element_text(size=14),
axis.text.y = element_text(size=14))
ggsave("./Figures/GrandAverage_allElec_allSubjects.tiff", width = 12, height = 8)
ggsave("./Figures/GrandAverage_allElec_allSubjects.tiff", width = 14, height = 8)
SlowWave.correct = read.delim("AllSubs_TBTaverages_SlowWave_Correct_withPrevious_EventFixed.txt")
unique(SlowWave.correct$Subject)
N2.correct = read.delim("./AllSubs_TBTaverages_N2_Correct_withPrevious_EventFixed.txt")
unique(N2.correct$Subject)
sort(unique(SlowWave.correct$Subject))
sort(unique(N2.correct$Subject))
